services:
  backend:
    build:
      context: ..
      dockerfile: backend/Dockerfile
    # 生产环境：由 Portainer 注入环境变量；此处不设置默认值，仅声明需要传递的键名
    environment:
      - SUPABASE_URL
      - SUPABASE_KEY
      - OPENROUTER_API_KEY
      - OPENROUTER_MODEL
      - GEMINI_API_KEY_ANALYZE
      - GEMINI_API_KEY_SCREENING
      - tikhub_API_KEY
      - ENABLE_SCHEDULER
      - ENABLE_WORKER
      - ENABLE_API
      - ENABLE_LANE_EVALUATE
      - ENABLE_LANE_COMMENTS
      - ENABLE_LANE_ANALYZE
      - ENABLE_LANE_AUTHOR
      - SCHED_SEARCH_CRON
      - WORKER_POLL_INTERVAL_SEC
      - WORKER_EVAL_CONCURRENCY
      - WORKER_COMMENTS_CONCURRENCY
      - WORKER_ANALYZE_CONCURRENCY
      - WORKER_AUTHOR_CONCURRENCY
      - API_HOST
      - API_PORT
      - API_WORKERS
      - API_RELOAD
      - MAX_ATTEMPTS
      - RUNNING_TIMEOUT_MIN
      - LOG_LEVEL
      - TZ=Asia/Shanghai
    ports:
      - "8000:8000"  # API 端口映射
    volumes:
      - ./downloads:/app/backend/downloads
    restart: unless-stopped
    networks:
      - leviton-network

  caddy:
    image: caddy:latest
    container_name: caddy-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - leviton-network
    depends_on:
      - backend
    command: caddy reverse-proxy --from ${DOMAIN_NAME} --to backend:8000
volumes:
  caddy_data:
  caddy_config:

networks:
  leviton-network:
    driver: bridge